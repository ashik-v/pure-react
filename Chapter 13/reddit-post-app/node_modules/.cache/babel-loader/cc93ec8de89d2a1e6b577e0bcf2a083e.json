{"ast":null,"code":"var _jsxFileName = \"/Users/ashikv/pure-react/Chapter 13/reddit-post-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ErrorCatcher extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      error: null\n    };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      error: true,\n      info: info.componentStack\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"An error occured: \", this.state.info]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 14\n      }, this);\n    }\n\n    return this.props.children;\n  }\n\n}\n\nclass Reddit extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: []\n    };\n  }\n\n  static getDerivedStateFromProps() {\n    this.setState({\n      loading: true\n    });\n  }\n\n  componentDidMount() {\n    axios.get(`https://www.reddit.com/r/${this.props.subreddit}.json`).then(res => {\n      console.log(res);\n      const posts = res.data.data.children.map(obj => obj.data);\n      this.setState({\n        posts\n      });\n    });\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: `/r/${this.props.subreddit}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: post.title\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ErrorCatcher, {\n  children: /*#__PURE__*/_jsxDEV(Reddit, {\n    subreddit: \"ajdf;aksd\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 3\n}, this), document.querySelector('#root'));","map":{"version":3,"names":["React","ReactDOM","axios","ErrorCatcher","Component","state","error","componentDidCatch","info","setState","componentStack","render","props","children","Reddit","posts","getDerivedStateFromProps","loading","componentDidMount","get","subreddit","then","res","console","log","data","map","obj","post","title","id","document","querySelector"],"sources":["/Users/ashikv/pure-react/Chapter 13/reddit-post-app/src/index.js"],"sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport axios from 'axios'\n\nclass ErrorCatcher extends React.Component {\n  state = {\n    error: null\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ error: true, info: info.componentStack })\n  }\n\n  render() {\n    if (this.state.error) {\n      return <div>An error occured: {this.state.info}</div>\n    }\n\n    return this.props.children\n  }\n}\n\nclass Reddit extends React.Component {\n  state = {\n    posts: []\n  }\n\n  static getDerivedStateFromProps() {\n    this.setState({loading: true})\n  }\n\n  componentDidMount() {\n    axios\n      .get(`https://www.reddit.com/r/${this.props.subreddit}.json`)\n      .then((res) => {\n          console.log(res)\n          const posts = res.data.data.children.map((obj) => obj.data)\n          this.setState({posts})\n      })\n  }\n\n  render() {\n    const { posts } = this.state\n    return (\n      <div>\n        <h1>{`/r/${this.props.subreddit}`}</h1>\n        <ul>\n          {posts.map((post) => (\n            <li key={post.id}>{post.title}</li>\n          ))}\n        </ul>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <ErrorCatcher>\n    <Reddit subreddit=\"ajdf;aksd\" />\n  </ErrorCatcher>,\n  document.querySelector('#root'))"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;EAAA;IAAA;IAAA,KACzCC,KADyC,GACjC;MACNC,KAAK,EAAE;IADD,CADiC;EAAA;;EAKzCC,iBAAiB,CAACD,KAAD,EAAQE,IAAR,EAAc;IAC7B,KAAKC,QAAL,CAAc;MAAEH,KAAK,EAAE,IAAT;MAAeE,IAAI,EAAEA,IAAI,CAACE;IAA1B,CAAd;EACD;;EAEDC,MAAM,GAAG;IACP,IAAI,KAAKN,KAAL,CAAWC,KAAf,EAAsB;MACpB,oBAAO;QAAA,iCAAwB,KAAKD,KAAL,CAAWG,IAAnC;MAAA;QAAA;QAAA;QAAA;MAAA,QAAP;IACD;;IAED,OAAO,KAAKI,KAAL,CAAWC,QAAlB;EACD;;AAfwC;;AAkB3C,MAAMC,MAAN,SAAqBd,KAAK,CAACI,SAA3B,CAAqC;EAAA;IAAA;IAAA,KACnCC,KADmC,GAC3B;MACNU,KAAK,EAAE;IADD,CAD2B;EAAA;;EAKJ,OAAxBC,wBAAwB,GAAG;IAChC,KAAKP,QAAL,CAAc;MAACQ,OAAO,EAAE;IAAV,CAAd;EACD;;EAEDC,iBAAiB,GAAG;IAClBhB,KAAK,CACFiB,GADH,CACQ,4BAA2B,KAAKP,KAAL,CAAWQ,SAAU,OADxD,EAEGC,IAFH,CAESC,GAAD,IAAS;MACXC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACA,MAAMP,KAAK,GAAGO,GAAG,CAACG,IAAJ,CAASA,IAAT,CAAcZ,QAAd,CAAuBa,GAAvB,CAA4BC,GAAD,IAASA,GAAG,CAACF,IAAxC,CAAd;MACA,KAAKhB,QAAL,CAAc;QAACM;MAAD,CAAd;IACH,CANH;EAOD;;EAEDJ,MAAM,GAAG;IACP,MAAM;MAAEI;IAAF,IAAY,KAAKV,KAAvB;IACA,oBACE;MAAA,wBACE;QAAA,UAAM,MAAK,KAAKO,KAAL,CAAWQ,SAAU;MAAhC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UACGL,KAAK,CAACW,GAAN,CAAWE,IAAD,iBACT;UAAA,UAAmBA,IAAI,CAACC;QAAxB,GAASD,IAAI,CAACE,EAAd;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;AA/BkC;;AAkCrC7B,QAAQ,CAACU,MAAT,eACE,QAAC,YAAD;EAAA,uBACE,QAAC,MAAD;IAAQ,SAAS,EAAC;EAAlB;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF,EAIEoB,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAJF"},"metadata":{},"sourceType":"module"}